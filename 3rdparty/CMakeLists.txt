set(ZLIB_COMPAT OFF)
set(ZLIB_ENABLE_TESTS OFF)
set(ZLIBNG_ENABLE_TESTS OFF)
set(WITH_GTEST OFF)
set(WITH_NATIVE_INSTRUCTIONS ON)
set(WITH_RUNTIME_CPU_DETECTION OFF)
set(WITH_SANITIZER OFF)
set(SKIP_INSTALL_ALL ON)
include(CheckCCompilerFlag)
check_c_compiler_flag(-Wno-unused-command-line-argument XPWN_HAVE_W_NO_UNUSED_COMMAND_LINE_ARGUMENT)
if (XPWN_HAVE_W_NO_UNUSED_COMMAND_LINE_ARGUMENT)
    set(XPWN_ORIG_CMAKE_C_FLAGS ${CMAKE_C_FLAGS})
    list(APPEND CMAKE_C_FLAGS -Wno-unused-command-line-argument)
endif()
add_subdirectory(zlib-ng EXCLUDE_FROM_ALL)
unset(SKIP_INSTALL_ALL)
set(CMAKE_C_FLAGS ${XPWN_ORIG_CMAKE_C_FLAGS})
unset(XPWN_ORIG_CMAKE_C_FLAGS)
list(PREPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)

set(SKIP_INSTALL_ALL ON)
set(MZ_COMPAT OFF)
set(MZ_LIBCOMP OFF)
set(MZ_FETCH_LIBS OFF)
add_subdirectory(minizip-ng EXCLUDE_FROM_ALL)
unset(SKIP_INSTALL_ALL)

set(ENABLE_PROGRAMS OFF)
set(ENABLE_TESTING OFF)
set(INSTALL_MBEDTLS_HEADERS OFF)
add_subdirectory(mbedtls EXCLUDE_FROM_ALL)
unset(ENABLE_PROGRAMS)
unset(ENABLE_TESTING)
